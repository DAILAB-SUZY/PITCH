services:
  front:
    build:
      context: ./frontend/react-ts
      dockerfile: Dockerfile
    volumes:
      - frontend_build_dist:/app/dist
    container_name: frontend
    command: ["sh", "-c", "npm run build && cp -r /app/dist/* /app/dist-shared/"]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - images_data:${BASE_FILE_PATH}
      - frontend_build_dist:/app/src/main/resources-prod/static
    environment:
      - MAIL_ADDRESS=${MAIL_ADDRESS}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - YOUTUBE_KEY=${YOUTUBE_KEY}
      - YOUTUBE_CLIENT_ID=${YOUTUBE_CLIENT_ID}
      - YOUTUBE_CLIENT_SECRET=${YOUTUBE_CLIENT_SECRET}
      - REDIRECTION_ORIGIN=${REDIRECTION_ORIGIN}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - BASE_FILE_PATH=${BASE_FILE_PATH}
      - SERVER_ORIGIN=${SERVER_ORIGIN}
      - SERVER_PORT=${SERVER_PORT}
      - RDS_DB_NAME=${RDS_DB_NAME}
      - RDS_HOSTNAME=${RDS_HOSTNAME}
      - RDS_PASSWORD=${RDS_PASSWORD}
      - RDS_PORT=${RDS_PORT}
      - RDS_USERNAME=${RDS_USERNAME}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOSTNAME=${REDIS_HOSTNAME}
    container_name: pitch-prod
    depends_on:
      - postgres
      - redis
      - front
    ports:
      - 8082:${SERVER_PORT}
    networks:
      - app-network
      
  postgres:
    image: postgres:latest
    container_name: postgresql-prod
    restart: always
    environment:
      - POSTGRES_DB=${RDS_DB_NAME}
      - POSTGRES_PASSWORD=${RDS_PASSWORD}
      - POSTGRES_USER=${RDS_USERNAME}
      - 'TZ=Asia/Seoul'
    ports:
      - 9000:${RDS_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-prod
    restart: always
    hostname: ${REDIS_HOSTNAME}
    ports:
      - 9001:${REDIS_PORT}
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  frontend_build_dist:
    driver: local
  postgres_data:
    driver: local
  images_data:
    driver: local